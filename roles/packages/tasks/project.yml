---
- name: Add nginx, nodejs, postgres sources
  apt_repository:
    repo: '{{ item.repo }}'
    state: present
    filename: '{{ item.filename }}'
  with_items:
    - { repo: 'deb https://deb.nodesource.com/node_{{ nodejs_version }} trusty main', filename: 'nodesource' }
    - { repo: 'deb-src https://deb.nodesource.com/node_{{ nodejs_version }} trusty main', filename: 'nodesource' }
    - { repo: 'ppa:nginx/stable', filename: 'nginx' }
    - { repo: 'deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main', filename: 'pgdg' }
  become: yes

- name: Add apt signing key for nodejs, postgres
  apt_key:
    url: '{{ item.url }}'
    state: present
  with_items:
    - { url: 'https://deb.nodesource.com/gpgkey/nodesource.gpg.key' }
    - { url: 'https://www.postgresql.org/media/keys/ACCC4CF8.asc' }
  become: yes

- name: Install nginx, nodejs, postgres
  apt:
    name: '{{ item }}'
    update_cache: yes
    state: present
  with_items:
    - nodejs
    - nginx
    - postgresql-{{ postgres_version }}
  become: yes

- name: Install erlang {{ erlang_version }}
  apt:
    deb: "http://packages.erlang-solutions.com/site/esl/esl-erlang/FLAVOUR_1_general/esl-erlang_{{ erlang_version }}~ubuntu~trusty_amd64.deb" #debian~jessie_amd64.deb
    state: present
    force: yes
  become: yes
  tags: url

- name: Install elixir elixir_version
  apt:
    deb: "http://packages.erlang-solutions.com/site/ec/elixir/FLAVOUR_2_download/elixir_{{ elixir_version }}~ubuntu~trusty_amd64.deb"
    state: present
    force: yes
  become: yes
  tags: url

- name: Install prerequisites for database
  become: yes
  apt: name={{ item }} state=latest
  with_items:
    - libpq-dev
    - python-psycopg2
  tags: try

- name: Create database
  postgresql_db: name="{{ database_name }}" encoding="UTF-8"
  become: yes
  become_user: postgres
  tags: try
